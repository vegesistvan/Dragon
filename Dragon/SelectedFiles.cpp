// Setup.cpp : implementation file
//

#include "stdafx.h"
#include "Dragon.h"
#include "SelectedFiles.h"
#include "afxdialogex.h"
#include "utilities.h"

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
void CDragonDlg::OnSelectedFiles()
{
	CSelectedFiles dlg;
	if (dlg.DoModal() == IDCANCEL) return;
}
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
IMPLEMENT_DYNAMIC(CSelectedFiles, CDialogEx)
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
CSelectedFiles::CSelectedFiles(CWnd* pParent /*=NULL*/)
	: CDialogEx(CSelectedFiles::IDD, pParent)
{

}
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
CSelectedFiles::~CSelectedFiles()
{
}
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
void CSelectedFiles::DoDataExchange(CDataExchange* pDX)
{
	CDialogEx::DoDataExchange(pDX);
	DDX_Text(pDX, IDC_TEXTEDITOR, theApp.m_texteditor_default);
	DDX_Control(pDX, IDC_STATIC_TEXTEDITOR, m_color_texteditor);
	DDX_Control(pDX, IDC_STATIC_VIEWER, colorViewer);
}
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
BEGIN_MESSAGE_MAP(CSelectedFiles, CDialogEx)
	ON_STN_CLICKED(IDC_STATIC_TEXTEDITOR, &CSelectedFiles::OnClickedStaticTexteditor)
	ON_BN_CLICKED(IDC_BUTTON_DEFAULT, &CSelectedFiles::OnClickedButtonDefault)
	ON_STN_CLICKED(IDC_STATIC_VIEWER, &CSelectedFiles::OnClickedStaticViewer)
END_MESSAGE_MAP()
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
BOOL CSelectedFiles::OnInitDialog()
{
	CDialogEx::OnInitDialog();

	GetDlgItem( IDC_TEXTEDITOR )->SetWindowText( theApp.m_editorPathName );
	GetDlgItem( IDC_VIEWER )->SetWindowTextW( theApp.m_viewerPathName );

	m_color_texteditor.SetTextColor( theApp.m_colorClick );
	colorViewer.SetTextColor( theApp.m_colorClick );

	return TRUE;
}
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
void CSelectedFiles::OnClickedButtonDefault()
{
	CString drive;
	CString	dir;
	CString	fname;
	CString	ext;

	GetDlgItem( IDC_TEXTEDITOR )->SetWindowTextW( theApp.m_texteditor_default );

	theApp.m_editorPathName = theApp.m_texteditor_default;
	theApp.WriteProfileStringW( L"Settings", L"editorPathName", theApp.m_texteditor_default );

	splitFilespec( theApp.m_texteditor_default, &drive,&dir,&fname,&ext );
	theApp.m_editorFileName.Format( L"%s.%s", fname, ext );
	theApp.m_editorFolderPath.Format( L"%s:%s", drive, dir );
	
}
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
void CSelectedFiles::OnClickedStaticTexteditor()
{
	if( theApp.selectTextEditor() )
		GetDlgItem( IDC_TEXTEDITOR )->SetWindowTextW( theApp.m_editorPathName );
}
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
void CSelectedFiles::OnClickedStaticViewer()
{
	if( theApp.selectViewer() )
		GetDlgItem( IDC_VIEWER )->SetWindowText( theApp.m_viewerPathName );
}
